{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\hocke\\\\Desktop\\\\Class\\\\realMemoryGame\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hocke\\\\Desktop\\\\Class\\\\realMemoryGame\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hocke\\\\Desktop\\\\Class\\\\realMemoryGame\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hocke\\\\Desktop\\\\Class\\\\realMemoryGame\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\hocke\\\\Desktop\\\\Class\\\\realMemoryGame\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\hocke\\\\Desktop\\\\Class\\\\realMemoryGame\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Card from \"./components/Card/Card\";\nimport Header from \"./components/Header/Header\";\nimport Jumbotron from \"./components/Jumbotron/Jumbotron\";\nimport Footer from \"./components/Footer/Footer\";\nimport images from \"./components/images.json\"; // const characterImage = ['Rowe', 'Prevost', 'Gare'];\n// const CharacterLis = characterImage.map((characterImage, i ) =>\n//   // expression goes here:\n// \t<li key={'characterImage' + i}> { characterImage } </li>\n// );\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      images: images\n    };\n\n    _this.updateImage = function (id) {\n      e.target.setAttribute('src', characters[random + charactersLis]);\n      console.log(random + \"has just been changed\");\n    };\n\n    _this.removeImage = function (id) {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      var images = _this.state.images.filter(function (image) {\n        return image.id !== id;\n      }); // Set this.state.friends equal to the new friends array\n\n\n      _this.setState({\n        images: images\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.state.images.map(function (image) {\n        return React.createElement(\"button\", {\n          className: \"btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(Card // removeImage={this.removeImage}\n        , {\n          id: image.id,\n          key: image.id,\n          name: image.name,\n          image: image.src,\n          width: image.width,\n          height: image.height,\n          alt: image.alt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\hocke\\Desktop\\Class\\realMemoryGame\\my-app\\src\\App.js"],"names":["React","Component","Card","Header","Jumbotron","Footer","images","App","state","updateImage","id","e","target","setAttribute","characters","random","charactersLis","console","log","removeImage","filter","image","setState","map","name","src","width","height","alt"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CAEA;AAEA;AACA;AACA;AACA;;IACMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNF,MAAAA,MAAM,EAANA;AADM,K;;UAIRG,W,GAAc,UAAAC,EAAE,EAAI;AAClBC,MAAAA,CAAC,CAACC,MAAF,CAASC,YAAT,CAAsB,KAAtB,EAA6BC,UAAU,CAACC,MAAM,GAAGC,aAAV,CAAvC;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,GAAG,uBAArB;AACH,K;;UAEDI,W,GAAc,UAAAT,EAAE,EAAI;AAClB;AACA,UAAMJ,MAAM,GAAG,MAAKE,KAAL,CAAWF,MAAX,CAAkBc,MAAlB,CAAyB,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACX,EAAN,KAAaA,EAAjB;AAAA,OAA9B,CAAf,CAFkB,CAGlB;;;AACA,YAAKY,QAAL,CAAc;AAAEhB,QAAAA,MAAM,EAANA;AAAF,OAAd;AACD,K;;;;;;;6BAGQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKE,KAAL,CAAWF,MAAX,CAAkBiB,GAAlB,CAAsB,UAAAF,KAAK;AAAA,eAC1B;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD,CACE;AADF;AAEE,UAAA,EAAE,EAAEA,KAAK,CAACX,EAFZ;AAGE,UAAA,GAAG,EAAEW,KAAK,CAACX,EAHb;AAIE,UAAA,IAAI,EAAEW,KAAK,CAACG,IAJd;AAKE,UAAA,KAAK,EAAEH,KAAK,CAACI,GALf;AAME,UAAA,KAAK,EAAEJ,KAAK,CAACK,KANf;AAOE,UAAA,MAAM,EAAEL,KAAK,CAACM,MAPhB;AAQE,UAAA,GAAG,EAAEN,KAAK,CAACO,GARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAD0B;AAAA,OAA3B,CADH,CALF,CADF;AAwBD;;;;EA5Ce3B,S;;AA+ClB,eAAeM,GAAf","sourcesContent":["import React, {Component} from \"react\";\nimport Card from \"./components/Card/Card\";\nimport Header from \"./components/Header/Header\";\nimport Jumbotron from \"./components/Jumbotron/Jumbotron\";\nimport Footer from \"./components/Footer/Footer\";\nimport images from \"./components/images.json\";\n\n// const characterImage = ['Rowe', 'Prevost', 'Gare'];\n\n// const CharacterLis = characterImage.map((characterImage, i ) =>\n//   // expression goes here:\n// \t<li key={'characterImage' + i}> { characterImage } </li>\n// );\nclass App extends Component {\n  // Setting this.state.images to the images json array\n  state = {\n    images\n  };\n  \n  updateImage = id => {\n    e.target.setAttribute('src', characters[random + charactersLis]);\n      console.log(random + \"has just been changed\")\n  }\n\n  removeImage = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const images = this.state.images.filter(image => image.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ images });\n  };\n\n\n  render() {\n    return (\n      <div className=\"main\">\n        <div className=\"header\">\n          <Header />\n          <Jumbotron />\n        </div>\n        <div className=\"container\">\n          {this.state.images.map(image => (\n            <button className=\"btn\">\n              <Card\n                // removeImage={this.removeImage}\n                id={image.id}\n                key={image.id}\n                name={image.name}\n                image={image.src}\n                width={image.width}\n                height={image.height}\n                alt={image.alt}\n              />\n            </button>\n          ))}  \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}